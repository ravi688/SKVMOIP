#include <SKVMOIP/HID/HIDUsageID.hpp>
#include <SKVMOIP/debug.h>

namespace SKVMOIP
{
	SKVMOIP_API HIDUsageID GetHIDUsageIDFromWin32KeyCode(Win32::KeyCode keyCode)
	{
		switch(keyCode)
		{
			case Win32::KEYCODE_LEFT_MB: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RIGHT_MB: return HID_USAGE_ID_A;
			case Win32::KEYCODE_CONTROL_BREAK: return HID_USAGE_ID_A;
			case Win32::KEYCODE_MIDDLE_MB: return HID_USAGE_ID_A;
			case Win32::KEYCODE_X1_MB: return HID_USAGE_ID_A;
			case Win32::KEYCODE_X2_MB: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED0: return HID_USAGE_ID_A;
			case Win32::KEYCODE_BACKSPACE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_TAB: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED1: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED2: return HID_USAGE_ID_A;
			case Win32::KEYCODE_CLEAR: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RETURN_ENTER: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED0: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED1: return HID_USAGE_ID_A;
			case Win32::KEYCODE_SHIFT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_CTRL: return HID_USAGE_ID_A;
			case Win32::KEYCODE_ALT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PAUSE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_CAPSLOCK: return HID_USAGE_ID_A;
			case Win32::KEYCODE_KANA: return HID_USAGE_ID_A;
	/*		case Win32::KEYCODE_HANGUL: return HID_USAGE_ID_A;*/
			case Win32::KEYCODE_IME_ON: return HID_USAGE_ID_A;
			case Win32::KEYCODE_JUNJA: return HID_USAGE_ID_A;
			case Win32::KEYCODE_FINAL: return HID_USAGE_ID_A;
			case Win32::KEYCODE_HANJA: return HID_USAGE_ID_A;
	/*		case Win32::KEYCODE_KANJI: return HID_USAGE_ID_A;*/
			case Win32::KEYCODE_IME_OFF: return HID_USAGE_ID_A;
			case Win32::KEYCODE_ESCAPE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_CONVERT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NONCONVERT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_ACCEPT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_MODE_CHANGE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_SPACEBAR: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PAGE_UP: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PAGE_DOWN: return HID_USAGE_ID_A;
			case Win32::KEYCODE_END: return HID_USAGE_ID_A;
			case Win32::KEYCODE_HOME: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LEFT_ARROW: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UP_ARROW: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RIGHT_ARROW: return HID_USAGE_ID_A;
			case Win32::KEYCODE_DOWN_ARROW: return HID_USAGE_ID_A;
			case Win32::KEYCODE_SELECT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PRINT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_EXECUTE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PRINT_SCREEN: return HID_USAGE_ID_A;
			case Win32::KEYCODE_INSERT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_DELETE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_HELP: return HID_USAGE_ID_A;
			case Win32::KEYCODE_0: return HID_USAGE_ID_A;
			case Win32::KEYCODE_1: return HID_USAGE_ID_A;
			case Win32::KEYCODE_2: return HID_USAGE_ID_A;
			case Win32::KEYCODE_3: return HID_USAGE_ID_A;
			case Win32::KEYCODE_4: return HID_USAGE_ID_A;
			case Win32::KEYCODE_5: return HID_USAGE_ID_A;
			case Win32::KEYCODE_6: return HID_USAGE_ID_A;
			case Win32::KEYCODE_7: return HID_USAGE_ID_A;
			case Win32::KEYCODE_8: return HID_USAGE_ID_A;
			case Win32::KEYCODE_9: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNDEFINED0: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNDEFINED1: return HID_USAGE_ID_A;
			case Win32::KEYCODE_A: return HID_USAGE_ID_A;
			case Win32::KEYCODE_B: return HID_USAGE_ID_A;
			case Win32::KEYCODE_C: return HID_USAGE_ID_A;
			case Win32::KEYCODE_D: return HID_USAGE_ID_A;
			case Win32::KEYCODE_E: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F: return HID_USAGE_ID_A;
			case Win32::KEYCODE_G: return HID_USAGE_ID_A;
			case Win32::KEYCODE_H: return HID_USAGE_ID_A;
			case Win32::KEYCODE_I: return HID_USAGE_ID_A;
			case Win32::KEYCODE_J: return HID_USAGE_ID_A;
			case Win32::KEYCODE_K: return HID_USAGE_ID_A;
			case Win32::KEYCODE_L: return HID_USAGE_ID_A;
			case Win32::KEYCODE_M: return HID_USAGE_ID_A;
			case Win32::KEYCODE_N: return HID_USAGE_ID_A;
			case Win32::KEYCODE_O: return HID_USAGE_ID_A;
			case Win32::KEYCODE_P: return HID_USAGE_ID_A;
			case Win32::KEYCODE_Q: return HID_USAGE_ID_A;
			case Win32::KEYCODE_R: return HID_USAGE_ID_A;
			case Win32::KEYCODE_S: return HID_USAGE_ID_A;
			case Win32::KEYCODE_T: return HID_USAGE_ID_A;
			case Win32::KEYCODE_U: return HID_USAGE_ID_A;
			case Win32::KEYCODE_V: return HID_USAGE_ID_A;
			case Win32::KEYCODE_W: return HID_USAGE_ID_A;
			case Win32::KEYCODE_X: return HID_USAGE_ID_A;
			case Win32::KEYCODE_Y: return HID_USAGE_ID_A;
			case Win32::KEYCODE_Z: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LEFT_WINDOWS: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RIGHT_WINDOWS: return HID_USAGE_ID_A;
			case Win32::KEYCODE_APPLICATION: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED3: return HID_USAGE_ID_A;
			case Win32::KEYCODE_SLEEP: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_0: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_1: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_2: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_3: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_4: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_5: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_6: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_7: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_8: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMPAD_9: return HID_USAGE_ID_A;
			case Win32::KEYCODE_MULTIPLY: return HID_USAGE_ID_A;
			case Win32::KEYCODE_ADD: return HID_USAGE_ID_A;
			case Win32::KEYCODE_SEPARATOR: return HID_USAGE_ID_A;
			case Win32::KEYCODE_SUBTRACT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_DECIMAL: return HID_USAGE_ID_A;
			case Win32::KEYCODE_DIVIDE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F1: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F2: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F3: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F4: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F5: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F6: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F7: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F8: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F9: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F10: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F11: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F12: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F13: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F14: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F15: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F16: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F17: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F18: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F19: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F20: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F21: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F22: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F23: return HID_USAGE_ID_A;
			case Win32::KEYCODE_F24: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED4: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED5: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED6: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED7: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED8: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED9: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED10: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED11: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NUMLOCK: return HID_USAGE_ID_A;
			case Win32::KEYCODE_SCROLLLOCK: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC0: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC1: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC2: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC3: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC4: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED2: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED3: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED4: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED5: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED6: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED7: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED8: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED9: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED10: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LEFT_SHIFT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RIGHT_SHIFT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LEFT_CTRL: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RIGHT_CTRL: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LEFT_ALT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RIGHT_ALT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_BROWSER_BACK: return HID_USAGE_ID_A;
			case Win32::KEYCODE_BROWSER_FORWARD: return HID_USAGE_ID_A;
			case Win32::KEYCODE_BROWSER_REFRESH: return HID_USAGE_ID_A;
			case Win32::KEYCODE_BROWSER_STOP: return HID_USAGE_ID_A;
			case Win32::KEYCODE_BROWSER_SEARCH: return HID_USAGE_ID_A;
			case Win32::KEYCODE_BROWSER_FAVORITES: return HID_USAGE_ID_A;
			case Win32::KEYCODE_BROWSER_HOME: return HID_USAGE_ID_A;
			case Win32::KEYCODE_VOLUME_MUTE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_VOLUME_DOWN: return HID_USAGE_ID_A;
			case Win32::KEYCODE_VOLUME_UP: return HID_USAGE_ID_A;
			case Win32::KEYCODE_MEDIA_NEXT_TRACK: return HID_USAGE_ID_A;
			case Win32::KEYCODE_MEDIA_PREV_TRACK: return HID_USAGE_ID_A;
			case Win32::KEYCODE_MEDIA_STOP: return HID_USAGE_ID_A;
			case Win32::KEYCODE_MEDIA_PLAY_PAUSE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LAUNCH_MAIL: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LAUNCH_MEDIA_SELECT: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LAUNCH_APP1: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LAUNCH_APP2: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED12: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED13: return HID_USAGE_ID_A;
			case Win32::KEYCODE_SEMICOLON_COLON: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PLUS: return HID_USAGE_ID_A;
			case Win32::KEYCODE_COMMA: return HID_USAGE_ID_A;
			case Win32::KEYCODE_MINUS: return HID_USAGE_ID_A;
			case Win32::KEYCODE_FULLSTOP: return HID_USAGE_ID_A;
			case Win32::KEYCODE_FORWARD_SLASH_QUESTION: return HID_USAGE_ID_A;
			case Win32::KEYCODE_TILDE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED14: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED15: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED16: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED17: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED18: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED19: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED20: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED21: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED22: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED23: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED24: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED25: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED26: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED27: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED28: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED29: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED30: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED31: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED32: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED33: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED34: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED35: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED36: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED37: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED38: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED39: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OPEN_BRACKET_BRACE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_BACKSLASH_PILLOR: return HID_USAGE_ID_A;
			case Win32::KEYCODE_CLOSE_BRACKET_BRACE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_QUOTE_SINGLE_DOUBLE: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_8: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED40: return HID_USAGE_ID_A;
			case Win32::KEYCODE_RESERVED41: return HID_USAGE_ID_A;
			case Win32::KEYCODE_LESS_THAN_GREATER_THAN: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC5: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC6: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PROCESS: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC7: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PACKET: return HID_USAGE_ID_A;
			case Win32::KEYCODE_UNASSIGNED11: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC8: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC9: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC10: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC11: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC12: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC13: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC14: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC15: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC16: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC17: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC18: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC19: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_SPECIFIC20: return HID_USAGE_ID_A;
			case Win32::KEYCODE_ATTN: return HID_USAGE_ID_A;
			case Win32::KEYCODE_CRSEL: return HID_USAGE_ID_A;
			case Win32::KEYCODE_EXSEL: return HID_USAGE_ID_A;
			case Win32::KEYCODE_EREOF: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PLAY: return HID_USAGE_ID_A;
			case Win32::KEYCODE_ZOOM: return HID_USAGE_ID_A;
			case Win32::KEYCODE_NONAME: return HID_USAGE_ID_A;
			case Win32::KEYCODE_PA1: return HID_USAGE_ID_A;
			case Win32::KEYCODE_OEM_CLEAR: return HID_USAGE_ID_A;
			case Win32::KEYCODE_MAX: return HID_USAGE_ID_A;
			default:
				debug_log_fetal_error("Invalid Win32 virtual keycode: %lu", keyCode);
				return static_cast<HIDUsageID>(0);
		}
	}

	SKVMOIP_API HIDUsageID GetHIDUsageFromPS2Set1MakeCode(PS2Set1MakeCode makeCode)
	{
		switch(makeCode)
		{
/*		case PS2Set1MakeCode::SystemPower: return HID_USAGE_ID_SYSTEMPOWER;
		case PS2Set1MakeCode::SystemSleep: return HID_USAGE_ID_SYSTEMSLEEP;
		case PS2Set1MakeCode::SystemWake: return HID_USAGE_ID_SYSTEMWAKE;*/
		case PS2Set1MakeCode::NoEvent: return HID_USAGE_ID_RESERVED;
		case PS2Set1MakeCode::OverrunError: return HID_USAGE_ID_ERROR_ROLL_OVER;
		case PS2Set1MakeCode::POSTFail: return HID_USAGE_ID_POST_FAIL;
		/*case PS2Set1MakeCode::ErrorUndefined: return HID_USAGE_ID_ERROR_UNDEFINED;*/
		case PS2Set1MakeCode::aA: return HID_USAGE_ID_A;
		case PS2Set1MakeCode::bB: return HID_USAGE_ID_B;
		case PS2Set1MakeCode::cC: return HID_USAGE_ID_C;
		case PS2Set1MakeCode::dD: return HID_USAGE_ID_D;
		case PS2Set1MakeCode::eE: return HID_USAGE_ID_E;
		case PS2Set1MakeCode::fF: return HID_USAGE_ID_F;
		case PS2Set1MakeCode::gG: return HID_USAGE_ID_G;
		case PS2Set1MakeCode::hH: return HID_USAGE_ID_H;
		case PS2Set1MakeCode::iI: return HID_USAGE_ID_I;
		case PS2Set1MakeCode::jJ: return HID_USAGE_ID_J;
		case PS2Set1MakeCode::kK: return HID_USAGE_ID_K;
		case PS2Set1MakeCode::lL: return HID_USAGE_ID_L;
		case PS2Set1MakeCode::mM: return HID_USAGE_ID_M;
		case PS2Set1MakeCode::nN: return HID_USAGE_ID_N;
		case PS2Set1MakeCode::oO: return HID_USAGE_ID_O;
		case PS2Set1MakeCode::pP: return HID_USAGE_ID_P;
		case PS2Set1MakeCode::qQ: return HID_USAGE_ID_Q;
		case PS2Set1MakeCode::rR: return HID_USAGE_ID_R;
		case PS2Set1MakeCode::sS: return HID_USAGE_ID_S;
		case PS2Set1MakeCode::tT: return HID_USAGE_ID_T;
		case PS2Set1MakeCode::uU: return HID_USAGE_ID_U;
		case PS2Set1MakeCode::vV: return HID_USAGE_ID_V;
		case PS2Set1MakeCode::wW: return HID_USAGE_ID_W;
		case PS2Set1MakeCode::xX: return HID_USAGE_ID_X;
		case PS2Set1MakeCode::yY: return HID_USAGE_ID_Y;
		case PS2Set1MakeCode::zZ: return HID_USAGE_ID_Z;
		case PS2Set1MakeCode::Digit_1Exclaim: return HID_USAGE_ID_1_EXCLAIM;
		case PS2Set1MakeCode::Digit_2AtSign: return HID_USAGE_ID_2_ATSIGN;
		case PS2Set1MakeCode::Digit_3Hash: return HID_USAGE_ID_3_HASH;
		case PS2Set1MakeCode::Digit_4Dollar: return HID_USAGE_ID_4_DOLLAR;
		case PS2Set1MakeCode::Digit_5Percent: return HID_USAGE_ID_5_PERCENT;
		case PS2Set1MakeCode::Digit_6Hat: return HID_USAGE_ID_6_HAT;
		case PS2Set1MakeCode::Digit_7Ampersand: return HID_USAGE_ID_7_AMPERSAND;
		case PS2Set1MakeCode::Digit_8Asterisk: return HID_USAGE_ID_8_ASTERISK;
		case PS2Set1MakeCode::Digit_9OpenParen: return HID_USAGE_ID_9_OPEN_PAREN;
		case PS2Set1MakeCode::Digit_0CloseParen: return HID_USAGE_ID_0_CLOSE_PAREN;
		case PS2Set1MakeCode::Return: return HID_USAGE_ID_RETURN_ENTER;
		case PS2Set1MakeCode::Escape: return HID_USAGE_ID_ESCAPE;
		case PS2Set1MakeCode::Backspace: return HID_USAGE_ID_DELETE_BACKSPACE;
		case PS2Set1MakeCode::Tab: return HID_USAGE_ID_TAB;
		case PS2Set1MakeCode::Space: return HID_USAGE_ID_SPACEBAR;
		case PS2Set1MakeCode::MinusUnderscore: return HID_USAGE_ID_MINUS_UNDERSCORE;
		case PS2Set1MakeCode::EqualPlus: return HID_USAGE_ID_EQUAL_PLUS;
		case PS2Set1MakeCode::OpenBracketBrace: return HID_USAGE_ID_OPEN_BRACKET_BRACE;
		case PS2Set1MakeCode::CloseBracketBrace: return HID_USAGE_ID_CLOSE_BRACKET_BRACE;
		case PS2Set1MakeCode::BackSlashPillor: return HID_USAGE_ID_BACKSLASH_PILLOR;
		/*case PS2Set1MakeCode::Europe1: return HID_USAGE_ID_TILDE;*/
		case PS2Set1MakeCode::SemiColonColon: return HID_USAGE_ID_SEMICOLON_COLON;
		case PS2Set1MakeCode::QuoteSingleDouble: return HID_USAGE_ID_QUOTE_SINGLE_DOUBLE;
		case PS2Set1MakeCode::Tilde: return HID_USAGE_ID_TILDE;
		case PS2Set1MakeCode::CommaLessThan: return HID_USAGE_ID_COMMA_LESS_THAN;
		case PS2Set1MakeCode::FullStopGreaterThan: return HID_USAGE_ID_FULLSTOP_GREATER_THAN;
		case PS2Set1MakeCode::ForwardSlashQuestion: return HID_USAGE_ID_FORWARD_SLASH_QUESTION;
		case PS2Set1MakeCode::CapsLock: return HID_USAGE_ID_CAPSLOCK;
		case PS2Set1MakeCode::F1: return HID_USAGE_ID_F1;
		case PS2Set1MakeCode::F2: return HID_USAGE_ID_F2;
		case PS2Set1MakeCode::F3: return HID_USAGE_ID_F3;
		case PS2Set1MakeCode::F4: return HID_USAGE_ID_F4;
		case PS2Set1MakeCode::F5: return HID_USAGE_ID_F5;
		case PS2Set1MakeCode::F6: return HID_USAGE_ID_F6;
		case PS2Set1MakeCode::F7: return HID_USAGE_ID_F7;
		case PS2Set1MakeCode::F8: return HID_USAGE_ID_F8;
		case PS2Set1MakeCode::F9: return HID_USAGE_ID_F9;
		case PS2Set1MakeCode::F10: return HID_USAGE_ID_F10;
		case PS2Set1MakeCode::F11: return HID_USAGE_ID_F11;
		case PS2Set1MakeCode::F12: return HID_USAGE_ID_F12;
		case PS2Set1MakeCode::PrintScreen: return HID_USAGE_ID_PRINTSCREEN;
		case PS2Set1MakeCode::ScrollLock: return HID_USAGE_ID_SCROLLLOCK;
		/*casPS2Set1MakeCode::e BreakCtrlPause1: return HID_USAGE_ID_BREAKCTRLPAUSE1;
		case PS2Set1MakeCode::BreakCtrlPause2: return HID_USAGE_ID_BREAKCTRLPAUSE2;*/
		case PS2Set1MakeCode::Pause1: return HID_USAGE_ID_PAUSE;
		/*casPS2Set1MakeCode::e Pause2: return HID_USAGE_ID_PAUSE2;*/
		case PS2Set1MakeCode::Insert: return HID_USAGE_ID_INSERT;
		case PS2Set1MakeCode::Home: return HID_USAGE_ID_HOME;
		case PS2Set1MakeCode::PageUp: return HID_USAGE_ID_PAGEUP;
		case PS2Set1MakeCode::Delete: return HID_USAGE_ID_DELETE_FORWARD;
		case PS2Set1MakeCode::End: return HID_USAGE_ID_END;
		case PS2Set1MakeCode::PageDown: return HID_USAGE_ID_PAGE_DOWN;
		case PS2Set1MakeCode::RightArrow: return HID_USAGE_ID_RIGHT_ARROW;
		case PS2Set1MakeCode::LeftArrow: return HID_USAGE_ID_LEFT_ARROW;
		case PS2Set1MakeCode::DownArrow: return HID_USAGE_ID_DOWN_ARROW;
		case PS2Set1MakeCode::UpArrow: return HID_USAGE_ID_UP_ARROW;
		case PS2Set1MakeCode::NumLock: return HID_USAGE_ID_KEYPAD_NUMLOCK_CLEAR;
		case PS2Set1MakeCode::KeypadDivide: return HID_USAGE_ID_KEYPAD_FORWARD_SLASH;
		case PS2Set1MakeCode::KeypadMultiply: return HID_USAGE_ID_KEYPAD_ASTERISK;
		case PS2Set1MakeCode::KeypadMinus: return HID_USAGE_ID_KEYPAD_MINUS;
		case PS2Set1MakeCode::KeypadPlus: return HID_USAGE_ID_KEYPAD_PLUS;
		case PS2Set1MakeCode::KeypadEnter: return HID_USAGE_ID_KEYPAD_ENTER;
		case PS2Set1MakeCode::Keypad1End: return HID_USAGE_ID_KEYPAD_1_END;
		case PS2Set1MakeCode::Keypad2Down: return HID_USAGE_ID_KEYPAD_2_DOWN_ARROW;
		case PS2Set1MakeCode::Keypad3PageDn: return HID_USAGE_ID_KEYPAD_3_PAGE_DOWN;
		case PS2Set1MakeCode::Keypad4Left: return HID_USAGE_ID_KEYPAD_4_LEFT_ARROW;
		case PS2Set1MakeCode::Keypad5: return HID_USAGE_ID_KEYPAD_5;
		case PS2Set1MakeCode::Keypad6Right: return HID_USAGE_ID_KEYPAD_6_RIGHT_ARROW;
		case PS2Set1MakeCode::Keypad7Home: return HID_USAGE_ID_KEYPAD_7_HOME;
		case PS2Set1MakeCode::Keypad8Up: return HID_USAGE_ID_KEYPAD_8_UP_ARROW;
		case PS2Set1MakeCode::Keypad9PageUp: return HID_USAGE_ID_KEYPAD_9_PAGE_UP;
		case PS2Set1MakeCode::Keypad0Insert: return HID_USAGE_ID_KEYPAD_0_INSERT;
		case PS2Set1MakeCode::KeypadDotDelete: return HID_USAGE_ID_KEYPAD_DOT_DELETE;
		case PS2Set1MakeCode::Europe2: return HID_USAGE_ID_BACKSLASH_PILLOR_NEAR_LEFT_SHIFT;
		case PS2Set1MakeCode::App: return HID_USAGE_ID_APPLICATION;
		case PS2Set1MakeCode::KeyboardPower: return HID_USAGE_ID_POWER;
		case PS2Set1MakeCode::KeypadEqual: return HID_USAGE_ID_KEYPAD_EQUAL;
		case PS2Set1MakeCode::F13: return HID_USAGE_ID_F13;
		case PS2Set1MakeCode::F14: return HID_USAGE_ID_F14;
		case PS2Set1MakeCode::F15: return HID_USAGE_ID_F15;
		case PS2Set1MakeCode::F16: return HID_USAGE_ID_F16;
		case PS2Set1MakeCode::F17: return HID_USAGE_ID_F17;
		case PS2Set1MakeCode::F18: return HID_USAGE_ID_F18;
		case PS2Set1MakeCode::F19: return HID_USAGE_ID_F19;
		case PS2Set1MakeCode::F20: return HID_USAGE_ID_F20;
		case PS2Set1MakeCode::F21: return HID_USAGE_ID_F21;
		case PS2Set1MakeCode::F22: return HID_USAGE_ID_F22;
		case PS2Set1MakeCode::F23: return HID_USAGE_ID_F23;
		case PS2Set1MakeCode::F24: return HID_USAGE_ID_F24;
/*		case PS2Set1MakeCode::KeyboardExecute: return HID_USAGE_ID_EXECUTE;
		case PS2Set1MakeCode::KeyboardHelp: return HID_USAGE_ID_HELP;
		case PS2Set1MakeCode::KeyboardMenu: return HID_USAGE_ID_MENU;
		case PS2Set1MakeCode::KeyboardSelect: return HID_USAGE_ID_SELECT;
		case PS2Set1MakeCode::KeyboardStop: return HID_USAGE_ID_STOP;
		case PS2Set1MakeCode::KeyboardAgain: return HID_USAGE_ID_AGAIN;
		case PS2Set1MakeCode::KeyboardUndo: return HID_USAGE_ID_UNDO;
		case PS2Set1MakeCode::KeyboardCut: return HID_USAGE_ID_CUT;
		case PS2Set1MakeCode::KeyboardCopy: return HID_USAGE_ID_COPY;
		case PS2Set1MakeCode::KeyboardPaste: return HID_USAGE_ID_PASTE;
		case PS2Set1MakeCode::KeyboardFind: return HID_USAGE_ID_FIND;
		case PS2Set1MakeCode::KeyboardMute: return HID_USAGE_ID_MUTE;
		case PS2Set1MakeCode::KeyboardVolumeUp: return HID_USAGE_ID_VOLUME_UP;
		case PS2Set1MakeCode::KeyboardVolumeDn: return HID_USAGE_ID_VOLUME_DOWN;
		case PS2Set1MakeCode::KeyboardLockingCapsLock: return HID_USAGE_ID_LOCKING_CAPSLOCK;
		case PS2Set1MakeCode::KeyboardLockingNumLock: return HID_USAGE_ID_LOCKING_NUMLOCK;
		case PS2Set1MakeCode::KeyboardLockingScrollLock: return HID_USAGE_ID_LOCKING_SCROLLLOCK;*/
		case PS2Set1MakeCode::KeypadCommaBrazilianKeypadDot: return HID_USAGE_ID_KEYPAD_COMMA;
		/*case PS2Set1MakeCode::KeyboardEqualSign: return HID_USAGE_ID_KEYPAD_EQUAL_SIGN;*/
		/*casPS2Set1MakeCode::KeyboardInternational1: return HID_USAGE_ID_KEYBOARDINTERNATIONAL1;
		case PS2Set1MakeCode::KeyboardInternational2: return HID_USAGE_ID_KEYBOARDINTERNATIONAL2;
		case PS2Set1MakeCode::KeyboardInternational3: return HID_USAGE_ID_KEYBOARDINTERNATIONAL3;
		case PS2Set1MakeCode::KeyboardInternational4: return HID_USAGE_ID_KEYBOARDINTERNATIONAL4;
		case PS2Set1MakeCode::KeyboardInternational5: return HID_USAGE_ID_KEYBOARDINTERNATIONAL5;
		case PS2Set1MakeCode::KeyboardInternational6: return HID_USAGE_ID_KEYBOARDINTERNATIONAL6;
		case PS2Set1MakeCode::KeyboardInternational7: return HID_USAGE_ID_KEYBOARDINTERNATIONAL7;
		case PS2Set1MakeCode::KeyboardInternational8: return HID_USAGE_ID_KEYBOARDINTERNATIONAL8;
		case PS2Set1MakeCode::KeyboardInternational9: return HID_USAGE_ID_KEYBOARDINTERNATIONAL9;
		case PS2Set1MakeCode::KeyboardLang1: return HID_USAGE_ID_KEYBOARDLANG1;
		case PS2Set1MakeCode::KeyboardLang2: return HID_USAGE_ID_KEYBOARDLANG2;
		case PS2Set1MakeCode::KeyboardLang3: return HID_USAGE_ID_KEYBOARDLANG3;
		case PS2Set1MakeCode::KeyboardLang4: return HID_USAGE_ID_KEYBOARDLANG4;
		case PS2Set1MakeCode::KeyboardLang5: return HID_USAGE_ID_KEYBOARDLANG5;
		case PS2Set1MakeCode::KeyboardLang6: return HID_USAGE_ID_KEYBOARDLANG6;
		case PS2Set1MakeCode::KeyboardLang7: return HID_USAGE_ID_KEYBOARDLANG7;
		case PS2Set1MakeCode::KeyboardLang8: return HID_USAGE_ID_KEYBOARDLANG8;
		case PS2Set1MakeCode::KeyboardLang9: return HID_USAGE_ID_KEYBOARDLANG9;
		case PS2Set1MakeCode::KeyboardAlternateErase: return HID_USAGE_ID_KEYBOARDALTERNATEERASE;
		case PS2Set1MakeCode::KeyboardSysReqAttention: return HID_USAGE_ID_KEYBOARDSYSREQATTENTION;
		case PS2Set1MakeCode::KeyboardCancel: return HID_USAGE_ID_KEYBOARDCANCEL;
		case PS2Set1MakeCode::KeyboardClear: return HID_USAGE_ID_KEYBOARDCLEAR;
		case PS2Set1MakeCode::KeyboardPrior: return HID_USAGE_ID_KEYBOARDPRIOR;
		case PS2Set1MakeCode::KeyboardReturn: return HID_USAGE_ID_KEYBOARDRETURN;
		case PS2Set1MakeCode::KeyboardSeparator: return HID_USAGE_ID_KEYBOARDSEPARATOR;
		case PS2Set1MakeCode::KeyboardOut: return HID_USAGE_ID_KEYBOARDOUT;
		case PS2Set1MakeCode::KeyboardOper: return HID_USAGE_ID_KEYBOARDOPER;
		case PS2Set1MakeCode::KeyboardClearAgain: return HID_USAGE_ID_KEYBOARDCLEARAGAIN;
		case PS2Set1MakeCode::KeyboardCrSelProps: return HID_USAGE_ID_KEYBOARDCRSELPROPS;
		case PS2Set1MakeCode::KeyboardExSel: return HID_USAGE_ID_KEYBOARDEXSEL;
		case PS2Set1MakeCode::Reserved1: return HID_USAGE_ID_RESERVED1;*/
		case PS2Set1MakeCode::LeftControl: return HID_USAGE_ID_LEFT_CONTROL;
		case PS2Set1MakeCode::LeftShift: return HID_USAGE_ID_LEFT_SHIFT;
		case PS2Set1MakeCode::LeftAlt: return HID_USAGE_ID_LEFT_ALT;
		case PS2Set1MakeCode::LeftGUI: return HID_USAGE_ID_LEFT_GUI;
		case PS2Set1MakeCode::RightControl: return HID_USAGE_ID_RIGHT_CONTROL;
		case PS2Set1MakeCode::RightShift: return HID_USAGE_ID_RIGHT_SHIFT;
		case PS2Set1MakeCode::RightAlt: return HID_USAGE_ID_RIGHT_ALT;
		case PS2Set1MakeCode::RightGUI: return HID_USAGE_ID_RIGHT_GUI;
		/*casPS2Set1MakeCode::e RESERVED2: return HID_USAGE_ID_RESERVED2;
		case PS2Set1MakeCode::ScanNextTrack: return HID_USAGE_ID_SCANNEXTTRACK;
		case PS2Set1MakeCode::ScanPreviousTrack: return HID_USAGE_ID_SCANPREVIOUSTRACK;
		case PS2Set1MakeCode::Stop: return HID_USAGE_ID_STOP;
		case PS2Set1MakeCode::PlayPause: return HID_USAGE_ID_PLAYPAUSE;
		case PS2Set1MakeCode::Mute: return HID_USAGE_ID_MUTE;
		case PS2Set1MakeCode::BassBoost: return HID_USAGE_ID_BASSBOOST;
		case PS2Set1MakeCode::Loudness: return HID_USAGE_ID_LOUDNESS;
		case PS2Set1MakeCode::VolumeUp: return HID_USAGE_ID_VOLUMEUP;
		case PS2Set1MakeCode::VolumeDown: return HID_USAGE_ID_VOLUMEDOWN;
		case PS2Set1MakeCode::BassUp: return HID_USAGE_ID_BASSUP;
		case PS2Set1MakeCode::BassDown: return HID_USAGE_ID_BASSDOWN;
		case PS2Set1MakeCode::TrebleUp: return HID_USAGE_ID_TREBLEUP;
		case PS2Set1MakeCode::TrebleDown: return HID_USAGE_ID_TREBLEDOWN;
		case PS2Set1MakeCode::MediaSelect: return HID_USAGE_ID_MEDIASELECT;
		case PS2Set1MakeCode::Mail: return HID_USAGE_ID_MAIL;
		case PS2Set1MakeCode::Calculator: return HID_USAGE_ID_CALCULATOR;
		case PS2Set1MakeCode::MyComputer: return HID_USAGE_ID_MYCOMPUTER;
		case PS2Set1MakeCode::WWWSearch: return HID_USAGE_ID_WWWSEARCH;
		case PS2Set1MakeCode::WWWHome: return HID_USAGE_ID_WWWHOME;
		case PS2Set1MakeCode::WWWBack: return HID_USAGE_ID_WWWBACK;
		case PS2Set1MakeCode::WWWForward: return HID_USAGE_ID_WWWFORWARD;
		case PS2Set1MakeCode::WWWStop: return HID_USAGE_ID_WWWSTOP;
		case PS2Set1MakeCode::WWWRefresh: return HID_USAGE_ID_WWWREFRESH;
		case PS2Set1MakeCode::WWWFavorites: return HID_USAGE_ID_WWWFAVORITES;*/
			default:
				DEBUG_LOG_WARNING("Invalid or Unused (Yet to be added) PS/2 Set 1 Make Code: %lu", makeCode);
				return static_cast<HIDUsageID>(0);
		}
	}
}
